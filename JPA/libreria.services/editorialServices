package libreria.servicios;

import libreria.entidades.Editorial;
import libreria.persistencia.EditorialDAO;

public class EditorialServices {

    private final EditorialDAO daoEditorial;

    public EditorialServices(EditorialDAO daoEditorial) {
        this.daoEditorial = daoEditorial;
    }

    public EditorialServices() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    public Editorial crearEditorial(Integer id, String nombre, boolean alta) {
        Editorial editorial = new Editorial();
        try {
            editorial.setAlta(alta);
            editorial.setId(id);
            editorial.setNombre(nombre);
            return editorial;
        } catch (Exception e) {
            System.out.println("No se guardo la editorial correctamente" + e.getMessage());
            return null;
        }
    }

    public void modificarNombreEditorial(String nombre, String nombreNuevo) {
        try {
            Editorial editorial = buscarEditorialPorNombre(nombre);
            editorial.setNombre(nombreNuevo);
            daoEditorial.modificarEditorial(editorial);
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    public void eliminarEditorial(String nombre) throws Exception {

        try {
            //Validamos 
            if (nombre == null || nombre.trim().isEmpty()) {
                throw new Exception("Debe indicar el nombre");
            }
            daoEditorial.eliminarEditorial(nombre);
            System.out.println("EDITORIAL ELIMINADA CON EXITO");
        } catch (Exception e) {
            throw e;
        }
    }

    public Editorial buscarEditorialPorId(Integer id) throws Exception {

        try {
            //Validamos
            if (id == null) {
                throw new Exception("Debe indicar el id de la editorial");
            }
            Editorial editorial = daoEditorial.buscarEditorialPorId(id);
            return editorial;
        } catch (Exception e) {
            throw e;
        }
    }

    public Editorial buscarEditorialPorNombre(String nombre) throws Exception {

        try {
            //Validamos
            if (nombre == null | nombre.trim().isEmpty()) {
                throw new Exception("Debe indicar el nombre");
            }
            Editorial editorial = daoEditorial.buscarEditorialPorNombre(nombre);
            return editorial;
        } catch (Exception e) {
            throw e;
        }
    }
}
