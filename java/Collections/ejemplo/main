package app;

import app.entidades.Cliente;
import app.entidades.Libro;
import app.services.Services;
import java.util.*;
import java.util.Scanner;

public class App {

    public static void main(String[] args) {

        Scanner sc = new Scanner(System.in);
        Services s = new Services();
        
        Cliente cl1 = new Cliente ("Juan", "0001", 50000);
        Cliente cl2 = new Cliente ("Rosa", "0002", 30000);
        Cliente cl3 = new Cliente ("Alberto", "0003", 40000);
        Cliente cl4 = new Cliente ("Teresa", "0004", 30000);
        Cliente cl5 = new Cliente ("Teresa", "0004", 30000); //no me lo agregara por ser igual
        Cliente cl6 = new Cliente ("Nahuel", "0005", 10000);
        
        Libro libro1 = new Libro ("El Principito", "Un frances", 33);
        Libro libro2 = new Libro ("El Principito", "Un frances", 34);
        
        /*libro1=libro2;
        si hago esto la referencia es la misma
        */
        
        /*
        Utilizamos la interfaz set, y la clase HashSet
        porque en este caso nos conviene:
        Rapida, no admite duplicados, etc.
        */
        Set <Cliente> clientesBanco = new HashSet <>();
        clientesBanco.add(cl1);
        clientesBanco.add(cl2);
        clientesBanco.add(cl3);
        clientesBanco.add(cl4);
        clientesBanco.add(cl5);
        clientesBanco.add(cl6);
        
        /*
        for mejorado o for each
        me lo cambio NetBeans
        */
        clientesBanco.forEach((cliente) -> {
            System.out.println(cliente.toString());
        });
        
        /*
        Utilizamos el metodo equals
        que reescribimos para comparar ISBN
        */
        if(libro1.equals(libro2)){
            System.out.println("Es el mismo");
            System.out.println(libro1.hashCode());
            System.out.println(libro2.hashCode());
        }else{
            System.out.println("No es el mismo");
            System.out.println(libro1.hashCode());
            System.out.println(libro2.hashCode());
        }
        
        /*
        EJEMPLO DE ITERATOR
        creo un obj de tipo iterador
        lo almaceno en "it"
        */
        Iterator<Cliente> it = clientesBanco.iterator();
        
        while(it.hasNext()){ //mientras exista un siguiente
            
            String nombre = it.next().getNombre();
            System.out.println(nombre);
            /*String nCuenta = it.next().getN_cuenta();
            System.out.println(nCuenta);
            esto me daria un error de logica
            ya que llamo 2 veces al metodo next
            entonces el numero de cuenta es el siguiente
            no el que espero
            */
        }
        
        /*
        remuevo un cliente
        mejor con un iterador
        */
        Iterator<Cliente> itr = clientesBanco.iterator();
        while(itr.hasNext()){
            String nombreCliente = itr.next().getNombre();
            if(nombreCliente.equals("Nahuel")){
                itr.remove();
            }
        }
        clientesBanco.forEach((cliente) -> {
            System.out.println(cliente.toString());
        });
    }
}
